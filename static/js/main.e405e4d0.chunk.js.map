{"version":3,"sources":["components/search/Search.tsx","components/results/Results.tsx","utils/time.js","components/hourCard/HourCard.tsx","components/possibilities/Possibilities.tsx","components/calendar/Calendar.tsx","utils/httpResponses.js","components/error/Error.tsx","utils/fetchCalls.ts","utils/cleanData.ts","utils/utils.ts","components/app/App.tsx","index.tsx"],"names":["Search","getForecast","useState","minTemp","setMinTemp","maxTemp","setMaxTemp","wind","setWindSpeed","precipProbability","setProbability","className","name","value","onChange","event","Number","target","to","onClick","temperature","low","high","windSpeed","probOfPrecip","Results","result","notice","nice","hours","calendar","months","number","HourCard","hour","addToCalendar","month","find","time","thisHour","icon","inCalendar","day","precipProb","Possibilities","suitableHours","hourCards","map","suitableHour","Calendar","length","httpResponses","Error","errorCode","clearSelected","matchingResponse","response","code","message","description","fetchData","url","a","headers","opts","method","fetch","checkForError","ok","status","toString","json","data","cleanData","forecast","tempObjects","getTemperature","properties","values","windObjects","getWindSpeed","preciptObjects","getProbabilityOfPrecipitation","reduce","newArray","currentTempObj","matchingWindObj","currentWindObj","matchingPreciptObj","currentPreciptObj","cleanedHour","push","tempValues","currentValueObject","fullArray","validTime","split","dateArray","hoursThisLasts","join","i","thisDay","weatherObj","windValues","Math","round","precipValues","determineSuitableHours","thresholds","cleanedData","timezone","currentDateInHours","findUsersDateInHours","filter","currentHourObj","craftNotice","incremented","nextOpportunity","incrementingCurrentHours","every","hourObject","weatherDateInHours","splitDate","Date","toLocaleString","timeZone","App","undefined","coordinates","setCoordinates","setForecast","setErrorCode","setSuitableHours","setNotice","schedule","setSchedule","fetchAndCleanData","weatherURL","latitude","longitude","gridPoints","forecastGridData","useEffect","time_zone","suitable","thatOne","indexOf","includes","currentSchedule","ind","splice","exact","path","render","router","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.e405e4d0.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { SearchProps } from '../../interfaces/index';\n\nexport const Search: React.FC<SearchProps> = ({ getForecast }) => {\n  const [minTemp, setMinTemp] = useState(50);\n  const [maxTemp, setMaxTemp] = useState(90);\n  const [wind, setWindSpeed] = useState(10);\n  const [precipProbability, setProbability] = useState(50);\n\n  const onSubmitSearch = () => {\n    let thresholds = {\n      temperature: {\n        low: minTemp,\n        high: maxTemp\n      },\n      windSpeed: wind,\n      probOfPrecip: precipProbability\n    }\n    getForecast(thresholds)\n  }\n\n  return (\n    <section className=\"flex my-16 text-center items-center justify-center\">\n      <section className=\"flex flex-col w-11/12 sm:w-9/12 md:w-7/12 lg:w-full\">\n        <h2 className=\"text-3xl\">Select your weather thresholds and find out if you can go outside</h2>\n        <form className=\"mt-4 flex flex-col items-center\">\n          \n          <label className=\"flex flex-col items-center my-3\">\n            <p className=\"text-gray-700\">Min Temperature</p>\n            <select name='minTemp' value={minTemp}\n              className=\"rounded-full w-24 mt-1 bg-gray-100 shadow-md cursor-pointer\"\n              onChange={event => setMinTemp(Number(event.target.value))}\n            >\n              <option value={40}>40</option>\n              <option value={50}>50</option>\n              <option value={60}>60</option>\n            </select>\n          </label>\n\n          <label className=\"flex flex-col items-center my-3\">\n            <p className=\"text-gray-700\">Max Temperature</p>\n            <select name='maxTemp' value={maxTemp}\n              className=\"rounded-full w-24 mt-1 bg-gray-100 shadow-md cursor-pointer\"\n              onChange={event => setMaxTemp(Number(event.target.value))}\n            >\n              <option value={80}>80</option>\n              <option value={90}>90</option>\n              <option value={100}>100</option>\n            </select>\n          </label>\n\n          <label className=\"flex flex-col items-center my-3\">\n            <p className=\"text-gray-700\">Wind Speed</p>\n            <select name='wind' value={wind}\n              className=\"rounded-full w-24 mt-1 bg-gray-100 shadow-md cursor-pointer\"\n              onChange={event => setWindSpeed(Number(event.target.value))}\n            >\n              <option value={5}>5</option>\n              <option value={10}>10</option>\n              <option value={20}>20</option>\n              <option value={30}>30</option>\n            </select>\n          </label>\n\n          <label className=\"flex flex-col items-center text-center my-3\">\n            <p className=\"text-gray-700\">Probability of Precipitation</p>\n            <select name='precipProbability' value={precipProbability}\n              className=\"rounded-full w-24 mt-1 bg-gray-100 shadow-md cursor-pointer\"\n              onChange={event => setProbability(Number(event.target.value))}\n            >\n              <option value={30}>30</option>\n              <option value={50}>50</option>\n              <option value={70}>70</option>\n            </select>\n          </label>\n\n          <Link to='/results' onClick={() => onSubmitSearch()}>\n            <button className=\"uppercase bg-yellow-300 border border-gray-900 rounded-full shadow-md py-3 px-6 mt-5 transition duration-500 ease-in-out hover:bg-green-400 transform hover:scale-110\">submit</button>\n          </Link>\n            \n        </form>\n      </section>\n    </section>\n  )\n};","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { ResultsProps } from '../../interfaces/index';\n\nexport const Results: React.FC<ResultsProps> = ({ notice }) => {\n  let result\n  if (notice.nice) {\n    result = <><h2 className=\"text-3xl\">Good news!</h2>\n      <p className=\"my-3 text-2xl\">You can go outside for {notice.hours} hours!</p></>\n  } else {\n    result = <><h2 className=\"text-3xl\">Bad news</h2>\n      <p className=\"my-3 text-2xl\">You can't go outside for {notice.hours} hours!</p></>\n  }\n\n  return (\n    <section className=\"flex flex-col items-center my-16\">\n      {result}\n      <p className=\"mt-6 text-xl\">To see all the forcasted hours that satisfy your thresholds</p>\n      <Link to='/good_weather'>\n        <button className=\"uppercase bg-yellow-300 border border-gray-900 rounded-full shadow-md mt-1 py-3 px-6 transition duration-500 ease-in-out hover:bg-red-400 transform hover:scale-110\">click here</button>\n      </Link>\n    </section>\n  )\n};","export const calendar = {\n  months: [\n    { number: 1, name: 'January' },\n    { number: 2, name: 'February' },\n    { number: 3, name: 'March' },\n    { number: 4, name: 'April' },\n    { number: 5, name: 'May' },\n    { number: 6, name: 'June' },\n    { number: 7, name: 'July' },\n    { number: 8, name: 'August' },\n    { number: 9, name: 'September' },\n    { number: 10, name: 'October' },\n    { number: 11, name: 'November' },\n    { number: 12, name: 'December' }\n  ],\n  hours: [\n    { number: 0, name: '12 AM' },  \n    { number: 1, name: '1 AM' },\n    { number: 2, name: '2 AM' },\n    { number: 3, name: '3 AM' },\n    { number: 4, name: '4 AM' },\n    { number: 5, name: '5 AM' },\n    { number: 6, name: '6 AM' },\n    { number: 7, name: '7 AM' },\n    { number: 8, name: '8 AM' },\n    { number: 9, name: '9 AM' },\n    { number: 10, name: '10 AM' },\n    { number: 11, name: '11 AM' },\n    { number: 12, name: '12 PM' },\n    { number: 13, name: '1 PM' },\n    { number: 14, name: '2 PM' },\n    { number: 15, name: '3 PM' },\n    { number: 16, name: '4 PM' },\n    { number: 17, name: '5 PM' },\n    { number: 18, name: '6 PM' },\n    { number: 19, name: '7 PM' },\n    { number: 20, name: '8 PM' },\n    { number: 21, name: '9 PM' },\n    { number: 22, name: '10 PM' },\n    { number: 23, name: '11 PM' }\n  ]\n}","import React from 'react';\nimport { HourProps } from '../../interfaces/index';\nimport { calendar } from '../../utils/time'\n\nexport const HourCard: React.FC<HourProps> = ({ hour, addToCalendar }) => {\n  let month = calendar.months.find(month => month.number === hour.month)?.name\n  let time = calendar.hours.find(thisHour => thisHour.number === hour.hour)?.name\n  let icon = (hour.inCalendar ? 'remove' : 'add')\n\n  return (\n    <article className='flex flex-col items-center border p-6 rounded-2xl shadow-md bg-gray-50 transition duration-300 ease-in-out transform hover:bg-gray-100 hover:scale-105'>\n      <label>\n        <button className=\"material-icons-outlined md-24 bg-yellow-300 rounded-full shadow-md p-3 transition duration-500 ease-in-out transform hover:scale-125\"\n          onClick={() => addToCalendar(hour)}\n        >\n          {icon}\n        </button>\n      </label>\n\n      <dl className=\"flex flex-col items-center text-center uppercase\">\n        <dt className=\"mt-4\">Date</dt>\n        <dd className=\"text-xl\">{time} {month} {hour.day}</dd>\n\n        <dt className=\"mt-4\">Temperature</dt>\n        <dd className=\"text-xl\">{hour.temperature} <span>&#8457;</span></dd>\n\n        <dt className=\"mt-4\">Wind Speed</dt>\n        <dd className=\"text-xl\">{hour.windSpeed} mph</dd>\n\n        <dt className=\"mt-4\">Probability of Precipitation</dt>\n        <dd className=\"text-xl\">{hour.precipProb}%</dd>\n      </dl>\n    </article>\n  )\n};","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { PossibilitiesProps } from '../../interfaces/index';\nimport { HourCard } from \"../hourCard/HourCard\"\n\nexport const Possibilities: React.FC<PossibilitiesProps> = ({ suitableHours, addToCalendar }) => {\n  let hourCards = suitableHours.map(suitableHour => {\n    return (\n      <HourCard\n        key={`${suitableHour.month}${suitableHour.day}${suitableHour.hour}`}\n        hour={suitableHour}\n        addToCalendar={addToCalendar}\n      />\n    )\n  })\n\n  return (\n    <section className='flex flex-col items-center my-16'>\n      <h2 className='text-3xl'>Suitable hours to be outside</h2>\n      <p className=\"mt-6 text-xl\">Click on an hour to add or delete it from your calendar</p>\n      <Link to='/calendar'>\n        <button className=\"uppercase bg-yellow-300 border border-gray-900 rounded-full shadow-md mt-1 py-3 px-6 transition duration-500 ease-in-out hover:bg-blue-400 transform hover:scale-110\">Your Calendar</button>\n      </Link>\n      <section className='p-8\n        grid gap-8 w-11/12\n        sm:grid-cols-2 sm:gap-6 sm:w-auto\n        md:grid-cols-3\n        lg:grid-cols-4\n        xl:grid-cols-6\n      '>\n        {hourCards}\n      </section>\n    </section>\n  )\n}","import React from 'react';\nimport { CalendarProps } from '../../interfaces/index';\nimport { HourCard } from \"../hourCard/HourCard\"\nimport { Link } from 'react-router-dom';\n\nexport const Calendar: React.FC<CalendarProps> = ({ calendar, addToCalendar }) => {\n  let hourCards = calendar.map(hour => {\n    return (\n      <HourCard\n        key={`${hour.month}${hour.day}${hour.hour}`}\n        hour={hour}\n        addToCalendar={addToCalendar}\n      />\n    )\n  })\n\n  if (calendar.length) {\n    return (\n      <section className='flex flex-col items-center my-16'>\n        <h2 className='text-3xl capitalize'>Your calendar</h2>\n        <p className=\"mt-6 text-xl\">Click on an hour to delete it from your calendar</p>\n        <section className='p-8\n          grid gap-8 w-11/12\n          sm:grid-cols-2 sm:gap-6 sm:w-auto\n          md:grid-cols-3\n          lg:grid-cols-4\n          xl:grid-cols-6\n        '>\n          {hourCards}\n        </section>\n      </section>\n    )\n  } else {\n    return (\n      <section className='flex flex-col items-center my-16'>\n        <p className=\"text-3xl capitalize\">Your calendar is empty</p>\n        <Link to='/good_weather'>\n          <button className=\"mt-8 uppercase bg-yellow-300 border border-gray-900 rounded-full shadow-md mt-1 py-3 px-6 transition duration-500 ease-in-out hover:bg-indigo-400 transform hover:scale-110\">Go back</button>\n        </Link>\n      </section>\n    )\n  }\n}","export const httpResponses = [\n  {\n    \"code\": 301,\n    \"message\": \"Moved Permanently\",\n    \"description\": `The URL of the requested resource has been changed\n      permanently. The new URL is given in the response.`,\n  },\n  {\n    \"code\": 401,\n    \"message\": \"Unauthorized\",\n    \"description\": `Although the HTTP standard specifies \"unauthorized\",\n      semantically this response means \"unauthenticated\". That is, the client\n      must authenticate itself to get the requested response.`,\n  },\n  {\n    \"code\": 403,\n    \"message\": \"Forbidden\",\n    \"description\": `The client does not have access rights to the content;\n      that is, it is unauthorized, so the server is refusing to give the\n      requested resource. Unlike 401, the client's identity is known to the\n      server.`,\n  },\n  {\n    \"code\": 404,\n    \"message\": \"Not Found\",\n    \"description\": `The server can not find the requested resource. In the\n      browser, this means the URL is not recognized. In an API, this can also\n      mean that the endpoint is valid but the resource itself does not exist.\n      Servers may also send this response instead of 403 to hide the existence\n      of a resource from an unauthorized client. This response code is probably \n      the most famous one due to its frequent occurrence on the web.`,\n  },\n  {\n    \"code\": 408,\n    \"message\": \"Request Timeout\",\n    \"description\": `This response is sent on an idle connection by some \n      servers, even without any previous request by the client. It means that \n      the server would like to shut down this unused connection. This response \n      is used much more since some browsers, like Chrome, Firefox 27+, or IE9, \n      use HTTP pre-connection mechanisms to speed up surfing. Also note that \n      some servers merely shut down the connection without sending this \n      message.`,\n  },\n  {\n    \"code\": 429,\n    \"message\": \"Too Many Requests\",\n    \"description\": `The user has sent too many requests in a given amount of \n      time (\"rate limiting\").`,\n  },\n  {\n    \"code\": 500,\n    \"message\": \"Internal Server Error\",\n    \"description\": `The server has encountered a situation it doesn't know how \n      to handle.`,\n  },\n  {\n    \"code\": 502,\n    \"message\": \"Bad Gateway\",\n    \"description\": `This error response means that the server, while working as \n      a gateway to get a response needed to handle the request, got an invalid \n      response.`,\n  },\n  {\n    \"code\": 503,\n    \"message\": \"Service Unavailable\",\n    \"description\": `The server is not ready to handle the request. Common \n      causes are a server that is down for maintenance or that is overloaded. \n      Note that together with this response, a user-friendly page explaining \n      the problem should be sent. This response should be used for temporary \n      conditions and the Retry-After: HTTP header should, if possible, contain \n      the estimated time before the recovery of the service. The webmaster must \n      also take care about the caching-related headers that are sent along with \n      this response, as these temporary condition responses should usually not \n      be cached.`,\n  },\n  {\n    \"code\": 504,\n    \"message\": \"Gateway Timeout\",\n    \"description\": `This error response is given when the server is acting as a \n      gateway and cannot get a response in time.`,\n  }\n]","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { ErrorProps } from '../../interfaces/index';\nimport { httpResponses } from '../../utils/httpResponses'\n\nexport const Error: React.FC<ErrorProps> = ({ errorCode, clearSelected }) => {\n  let matchingResponse = httpResponses.find(response =>\n    response.code === Number(errorCode)\n  )\n\n  if (matchingResponse) {\n    return (\n      <article className='flex flex-col items-center mt-8'>\n        <section className='flex flex-col w-11/12 md:w-9/12 lg:w-6/12'>\n          <h2 className='text-3xl'>Error {matchingResponse.code}</h2>\n          <h3 className='text-xl font-medium'>{matchingResponse.message}</h3>\n          <p className=\"mt-6 text-xl\">{matchingResponse.description}</p>\n          <section className=\"flex flex-col items-center mt-8\">\n            <Link to='/'>\n              <button\n                onClick={clearSelected}\n                className=\"uppercase bg-yellow-300 border border-gray-900 rounded-full shadow-md mt-1 py-3 px-6 transition duration-500 ease-in-out hover:bg-pink-400 transform hover:scale-110\"\n              >Back</button>\n            </Link>\n          </section>\n        </section>\n      </article>\n    )\n  } else {\n    return (\n      <>\n        <p>No matching error</p>\n      </>\n    )\n  }\n}","export const fetchData = async (url: string) => {\n  let projectURL = `https://github.com/alexmkio/can-i`\n  let email = `alexandermartelkio@gmail.com`\n  const headers = {\n    'User-Agent': `(${projectURL}, ${email})`\n  }\n  const opts = {\n    method: 'GET',\n    headers\n  }\n\n  let response = await fetch(url, opts);\n  return checkForError(response);\n}\n\nconst checkForError = async (response: Response) => {\n  if (!response.ok) {\n    throw new Error(response.status.toString());\n  } else {\n    let data = await response.json()\n    return data\n  }\n}","import { Weather, ThresholdValues } from \"../interfaces/weather\"\nimport { CleanedHour, PreciptHour, TempHour, WindHour } from '../interfaces/index';\n\nexport const cleanData = (forecast: Weather) => {\n  let tempObjects = getTemperature(forecast.properties.temperature.values)\n  let windObjects = getWindSpeed(forecast.properties.windSpeed.values)\n  let preciptObjects = getProbabilityOfPrecipitation(forecast.properties.windSpeed.values)\n\n  return tempObjects.reduce((newArray: CleanedHour[], currentTempObj) => {\n    let matchingWindObj = windObjects.find((currentWindObj) =>\n      currentWindObj.month === currentTempObj.month && \n      currentWindObj.day === currentTempObj.day && \n      currentWindObj.hour === currentTempObj.hour)\n\n    let matchingPreciptObj = preciptObjects.find((currentPreciptObj) =>\n      currentPreciptObj.month === currentTempObj.month && \n      currentPreciptObj.day === currentTempObj.day && \n      currentPreciptObj.hour === currentTempObj.hour)\n\n    if (matchingWindObj && matchingPreciptObj) {\n      let cleanedHour: CleanedHour = {\n        month: currentTempObj.month,\n        day: currentTempObj.day,\n        hour: currentTempObj.hour,\n        inCalendar: false,\n        temperature: currentTempObj.temperature,\n        windSpeed: matchingWindObj!.windSpeed,\n        precipProb: matchingPreciptObj!.precipProb\n      }\n      newArray.push(cleanedHour)\n    }\n\n    return newArray\n  }, [])\n};\n\nconst getTemperature = (tempValues: ThresholdValues[]) => {\n  return tempValues.reduce((newArray: TempHour[], currentValueObject) => {\n    let fullArray = currentValueObject.validTime.split('T')\n    let dateArray = fullArray[0].split('-')\n    let month = Number(dateArray[1])\n    let day = Number(dateArray[2])\n    let hour = Number(fullArray[1].split(':')[0])\n    let hoursThisLasts = Number(fullArray.join().split('H').join().split(',')[2])\n\n    for (let i = 0; i < hoursThisLasts; i++) {\n      let thisMonth = month\n      let thisDay = day\n      let thisHour = hour + i\n      if (thisHour > 23) {\n        thisDay++\n        thisHour = thisHour - 24\n      }\n      let weatherObj = { \n        month: thisMonth, \n        day: thisDay, \n        hour: thisHour,\n        temperature: ((currentValueObject.value! * (9 / 5)) + 32)\n      }\n      newArray.push(weatherObj)\n    }\n    return newArray\n  }, [])\n}\n\nconst getWindSpeed = (windValues: ThresholdValues[]) => {\n  return windValues.reduce((newArray: WindHour[], currentValueObject) => {\n    let fullArray = currentValueObject.validTime.split('T')\n    let dateArray = fullArray[0].split('-')\n    let month = Number(dateArray[1])\n    let day = Number(dateArray[2])\n    let hour = Number(fullArray[1].split(':')[0])\n    let hoursThisLasts = Number(fullArray.join().split('H').join().split(',')[2])\n\n    for (let i = 0; i < hoursThisLasts; i++) {\n      let thisMonth = month\n      let thisDay = day\n      let thisHour = hour + i\n      if (thisHour > 23) {\n        thisDay++\n        thisHour = thisHour - 24\n      }\n      let weatherObj = { \n        month: thisMonth, \n        day: thisDay, \n        hour: thisHour,\n        windSpeed: Math.round(currentValueObject.value! / 1.609344)\n      }\n      newArray.push(weatherObj)\n    }\n    return newArray\n  }, [])\n}\n\nconst getProbabilityOfPrecipitation = (precipValues: ThresholdValues[]) => {\n  return precipValues.reduce((newArray: PreciptHour[], currentValueObject) => {\n    let fullArray = currentValueObject.validTime.split('T')\n    let dateArray = fullArray[0].split('-')\n    let month = Number(dateArray[1])\n    let day = Number(dateArray[2])\n    let hour = Number(fullArray[1].split(':')[0])\n    let hoursThisLasts = Number(fullArray.join().split('H').join().split(',')[2])\n\n    for (let i = 0; i < hoursThisLasts; i++) {\n      let thisMonth = month\n      let thisDay = day\n      let thisHour = hour + i\n      if (thisHour > 23) {\n        thisDay++\n        thisHour = thisHour - 24\n      }\n      let weatherObj = { \n        month: thisMonth, \n        day: thisDay, \n        hour: thisHour,\n        precipProb: currentValueObject.value \n      }\n      newArray.push(weatherObj)\n    }\n    return newArray\n  }, [])\n}","import { Thresholds, CleanedHour } from \"../interfaces/index\";\n\nexport const determineSuitableHours = (thresholds: Thresholds, cleanedData: CleanedHour[], timezone: string) => {\n  let currentDateInHours = findUsersDateInHours(timezone)\n  return cleanedData.filter(currentHourObj => {\n    let weatherDateInHours = ((currentHourObj.day * 24) + currentHourObj.hour)\n    if (weatherDateInHours >= currentDateInHours && \n      currentHourObj.temperature <= thresholds.temperature.high && \n      currentHourObj.temperature >= thresholds.temperature.low && \n      currentHourObj.windSpeed <= thresholds.windSpeed && \n      currentHourObj.precipProb <= thresholds.probOfPrecip\n    ) {\n      return currentHourObj\n    } else {\n      return false\n    }\n  })\n};\n\nexport const craftNotice = (suitableHours: CleanedHour[], timezone: string) => {\n  let currentDateInHours = findUsersDateInHours(timezone)\n  let incremented = 0\n  let nextOpportunity = 0\n  let incrementingCurrentHours = currentDateInHours\n\n  suitableHours.every(hourObject => {\n    let weatherDateInHours = ((hourObject.day * 24) + hourObject.hour)\n    if (incrementingCurrentHours === weatherDateInHours) {\n      incremented++\n      incrementingCurrentHours++\n      return true\n    } else {\n      nextOpportunity = weatherDateInHours - currentDateInHours\n      return false\n    }\n  })\n\n  if (incremented) {\n    return { nice: true, hours: incremented }\n  } else {\n    return { nice: false, hours: nextOpportunity }\n  }\n};\n\nconst findUsersDateInHours = (timezone: string) => {\n  let splitDate = new Date().toLocaleString(\"en-US\", {timeZone: timezone})\n    .split('/').join(':').split(':').join(', ').split(', ').join(' ').split(' ')\n  let hour = Number(splitDate[3])\n  if (splitDate[6] === 'PM') {\n    hour = hour + 12\n  }\n  return ((Number(splitDate[1]) * 24) + hour)\n}","import { useState, useEffect } from 'react';\nimport { Link, Route, Switch, Redirect } from 'react-router-dom';\nimport { Search } from '../search/Search';\nimport { Results } from '../results/Results'\nimport { Possibilities } from '../possibilities/Possibilities'\nimport { Calendar } from '../calendar/Calendar'\nimport { Error } from '../error/Error'\nimport { fetchData } from '../../utils/fetchCalls';\nimport { cleanData } from '../../utils/cleanData';\nimport { determineSuitableHours, craftNotice } from '../../utils/utils'\nimport { IpFetch, CleanedHour, Notice, Thresholds } from '../../interfaces/index';\n\nexport const App = () => {\n  const [coordinates, setCoordinates] = useState<IpFetch | undefined>(undefined);\n  const [forecast, setForecast] = useState<CleanedHour[]>([]);\n  const [errorCode, setErrorCode] = useState<number>(0);\n  const [suitableHours, setSuitableHours] = useState<CleanedHour[]>([]);\n  const [notice, setNotice] = useState<Notice>({ nice: false, hours: 0 });\n  const [schedule, setSchedule] = useState<CleanedHour[]>([]);\n\n  const fetchAndCleanData = async () => {\n    let ipKey = `103a0ac5b110412c9a639e3ab5afd99f`\n    let ipParams = `&fields=latitude,longitude,time_zone`\n    let weatherURL = `https://api.weather.gov/points/`\n    try {\n      let coordinates = await fetchData(\n        `https://api.ipgeolocation.io/ipgeo?apiKey=${ipKey}${ipParams}`\n      )\n      let gridPoints = await fetchData(\n        `${weatherURL}${coordinates.latitude},${coordinates.longitude}`\n      )\n      let forecast = await fetchData(gridPoints.properties.forecastGridData)\n      let cleanedData = cleanData(forecast)\n      setCoordinates(coordinates)\n      setForecast(cleanedData)\n    } catch (error) {\n      setErrorCode(Number(error.message))\n    }\n  }\n\n  useEffect(() => {\n    fetchAndCleanData()\n  }, [])\n\n  const getForecast = async (thresholds: Thresholds) => {\n    if (coordinates) {\n      let suitableHours = await determineSuitableHours(\n        thresholds,\n        forecast,\n        coordinates.time_zone.name\n      )\n      let notice = craftNotice(suitableHours, coordinates.time_zone.name)\n      setNotice(notice)\n      setSuitableHours(suitableHours)\n    }\n  }\n\n  const clearSelected = () => {\n    setErrorCode(0)\n  }\n\n  const addToCalendar = (hourObject: CleanedHour) => {\n    let suitable = suitableHours\n    let thatOne = suitable.indexOf(hourObject)\n    if (schedule.includes(hourObject)) {\n      let currentSchedule = schedule\n      let ind = currentSchedule.indexOf(hourObject)\n      currentSchedule.splice(ind, 1)\n      suitable[thatOne].inCalendar = false\n      setSchedule([...currentSchedule])\n    } else {\n      suitable[thatOne].inCalendar = true\n      setSchedule([...schedule, hourObject])\n    }\n    setSuitableHours([...suitable])\n  }\n\n  return (\n    <>\n      <header className=\"bg-gray-200 shadow-md sticky top-0 z-50\">\n        <Link to='/'>\n          <h1 className=\"text-4xl sm:text-5xl md:text-6xl lg:text-7xl text-center p-4 sm:p-8 transition duration-300 ease-in-out hover:text-purple-800\">Can I go outside?</h1>\n        </Link>\n      </header>\n      <main>\n        {!errorCode && (\n          <Switch>\n            <Route exact path='/' render={() =>\n              <Search getForecast={getForecast} /> \n            }/>\n\n            <Route exact path='/results' render={() =>\n              <Results notice={notice} />\n            }/>\n\n            <Route exact path='/good_weather' render={() =>\n              <Possibilities\n                suitableHours={suitableHours}\n                addToCalendar={addToCalendar}\n              />\n            }/>\n\n            <Route exact path='/calendar' render={() =>\n              <Calendar\n                calendar={schedule}\n                addToCalendar={addToCalendar}\n              />\n            }/>\n\n            <Route exact path='/404' render={() =>\n              <Error errorCode={404} clearSelected={clearSelected} />\n            }/>\n            \n            <Redirect to='/404' />\n          </Switch>\n        )}\n        {errorCode &&\n          <Error errorCode={errorCode} clearSelected={clearSelected} />\n        }\n      </main>\n    </>\n  )\n}","import ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport './index.css';\nimport { App } from './components/app/App';\n\nconst router = <HashRouter> <App /> </HashRouter>;\n\nReactDOM.render(router, document.getElementById('root'));"],"sourceRoot":""}