{"version":3,"sources":["components/Header.tsx","components/Search.tsx","components/Results.tsx","utils/time.js","components/HourRow.tsx","components/Possibilities.tsx","components/CalendarRow.tsx","components/Calendar.tsx","utils/httpResponses.js","components/Error.tsx","utils/fetchCalls.ts","utils/cleanData.ts","utils/utils.ts","components/App.tsx","serviceWorkerRegistration.ts","index.tsx"],"names":["Header","className","to","Search","getForecast","useState","minTemp","setMinTemp","maxTemp","setMaxTemp","wind","setWindSpeed","precipProbability","setProbability","FormControl","InputLabel","Select","value","label","onChange","event","Number","target","MenuItem","onClick","temperature","low","high","windSpeed","probOfPrecip","Button","variant","size","endIcon","Results","result","notice","nice","hours","calendar","months","number","name","HourRow","hour","addToCalendar","month","find","time","thisHour","inCalendar","Checkbox","day","precipProb","Possibilities","suitableHours","hourRows","map","suitableHour","startIcon","CalendarRow","defaultChecked","Calendar","length","httpResponses","Error","errorCode","clearSelected","matchingResponse","response","code","message","description","fetchData","url","a","headers","opts","method","fetch","checkForError","ok","status","toString","json","data","cleanData","forecast","tempObjects","getTemperature","properties","values","windObjects","getWindSpeed","preciptObjects","getProbabilityOfPrecipitation","reduce","newArray","currentTempObj","matchingWindObj","currentWindObj","matchingPreciptObj","currentPreciptObj","cleanedHour","push","tempValues","currentValueObject","fullArray","validTime","split","dateArray","hoursThisLasts","join","i","thisDay","weatherObj","windValues","Math","round","precipValues","determineSuitableHours","thresholds","cleanedData","timezone","currentDateInHours","findUsersDateInHours","filter","currentHourObj","craftNotice","incremented","nextOpportunity","incrementingCurrentHours","every","hourObject","weatherDateInHours","splitDate","Date","toLocaleString","timeZone","App","undefined","coordinates","setCoordinates","setForecast","setErrorCode","setSuitableHours","setNotice","schedule","setSchedule","fetchAndCleanData","weatherURL","latitude","longitude","gridPoints","forecastGridData","useEffect","time_zone","suitable","thatOne","indexOf","includes","currentSchedule","ind","splice","exact","path","render","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","router","ReactDOM","document","getElementById","URL","process","href","origin","addEventListener","contentType","get","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.46fe4fc1.chunk.js","sourcesContent":["import { Link } from 'react-router-dom';\n\nexport const Header = () => {\n  return (\n    <header className=\"bg-gray-100 shadow-md sticky top-0 z-50\">\n      <Link to='/'>\n        <h1 className=\"text-4xl md:text-5xl text-center p-4 md:p-6 transition duration-300 ease-in-out hover:text-purple-800\">Can I go outside?</h1>\n      </Link>\n    </header>\n  )\n}","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { SearchProps } from '../interfaces/index';\nimport InputLabel from '@mui/material/InputLabel';\nimport MenuItem from '@mui/material/MenuItem';\nimport FormControl from '@mui/material/FormControl';\nimport Select from '@mui/material/Select';\nimport Button from '@mui/material/Button';\nimport ArrowForwardIcon from '@mui/icons-material/ArrowForward';\n\nexport const Search: React.FC<SearchProps> = ({ getForecast }) => {\n  const [minTemp, setMinTemp] = useState(50);\n  const [maxTemp, setMaxTemp] = useState(90);\n  const [wind, setWindSpeed] = useState(10);\n  const [precipProbability, setProbability] = useState(50);\n\n  const onSubmitSearch = () => {\n    let thresholds = {\n      temperature: {\n        low: minTemp,\n        high: maxTemp\n      },\n      windSpeed: wind,\n      probOfPrecip: precipProbability\n    }\n    getForecast(thresholds)\n  }\n\n  return (\n    <section className=\"flex my-4 md:my-8 text-center items-center justify-center\">\n      <section className=\"flex flex-col w-11/12 sm:w-9/12 md:w-7/12 lg:w-9/12\">\n        <h2 className=\"text-xl md:text-2xl\">Select your weather thresholds and find out if you can go outside</h2>\n\n        <section className=\"mt-6 md:mt-12\">\n          <FormControl className=\"w-44\">\n            <InputLabel>Min Temperature</InputLabel>\n            <Select\n              value={minTemp}\n              label=\"Min Temperature\"\n              onChange={event => setMinTemp(Number(event.target.value))}\n            >\n              <MenuItem value={40}>40 <span>&#x2109;</span></MenuItem>\n              <MenuItem value={50}>50 <span>&#x2109;</span></MenuItem>\n              <MenuItem value={60}>60 <span>&#x2109;</span></MenuItem>\n            </Select>\n          </FormControl>\n        </section>\n\n        <section className=\"mt-6 md:mt-12\">\n          <FormControl className=\"w-44\">\n            <InputLabel>Max Temperature</InputLabel>\n            <Select\n              value={maxTemp}\n              label=\"Max Temperature\"\n              onChange={event => setMaxTemp(Number(event.target.value))}\n            >\n              <MenuItem value={80}>80 <span>&#x2109;</span></MenuItem>\n              <MenuItem value={90}>90 <span>&#x2109;</span></MenuItem>\n              <MenuItem value={100}>100 <span>&#x2109;</span></MenuItem>\n            </Select>\n          </FormControl>\n        </section>\n\n        <section className=\"mt-6 md:mt-12\">\n          <FormControl className=\"w-44\">\n            <InputLabel>Wind Speed</InputLabel>\n            <Select\n              value={wind}\n              label=\"Wind Speed\"\n              onChange={event => setWindSpeed(Number(event.target.value))}\n            >\n              <MenuItem value={5}>5mph</MenuItem>\n              <MenuItem value={10}>10mph</MenuItem>\n              <MenuItem value={20}>20mph</MenuItem>\n              <MenuItem value={30}>30mph</MenuItem>\n            </Select>\n          </FormControl>\n        </section>\n\n        <section className=\"mt-6 md:mt-12\">\n          <FormControl className=\"w-44\">\n            <InputLabel>Probability of Precipitation</InputLabel>\n            <Select\n              value={precipProbability}\n              label=\"Probability of Precipitation\"\n              onChange={event => setProbability(Number(event.target.value))}\n            >\n              <MenuItem value={30}>30%</MenuItem>\n              <MenuItem value={50}>50%</MenuItem>\n              <MenuItem value={70}>70%</MenuItem>\n            </Select>\n          </FormControl>\n        </section>\n\n        <section className=\"mt-6 md:mt-12\">\n          <Link to='/results' onClick={() => onSubmitSearch()}>\n            <Button variant=\"outlined\" size=\"large\" endIcon={<ArrowForwardIcon />}>submit</Button>\n          </Link>\n        </section>\n\n      </section>\n    </section>\n  )\n}","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { ResultsProps } from '../interfaces/index';\nimport Button from '@mui/material/Button';\n\nexport const Results: React.FC<ResultsProps> = ({ notice }) => {\n  let result\n  if (notice.nice) {\n    result = <><h2 className=\"text-xl md:text-2xl\">Good news!</h2>\n      <p className=\"my-3 text-lg md:text-xl\">You can go outside for {notice.hours} hours!</p></>\n  } else {\n    result = <><h2 className=\"text-xl md:text-2xl\">Bad news</h2>\n      <p className=\"my-3 text-lg md:text-xl\">You can't go outside for {notice.hours} hours!</p></>\n  }\n\n  return (\n    <section className=\"flex flex-col items-center my-4 md:my-8\">\n      {result}\n      <p className=\"mt-6 text-lg md:text-xl\">To see all the forcasted hours that satisfy your thresholds</p>\n      <section className=\"mt-1 md:mt-2\">\n        <Link to='/good_weather'>\n          <Button variant=\"outlined\" size=\"large\">click here</Button>\n        </Link>\n      </section>\n    </section>\n  )\n}","export const calendar = {\n  months: [\n    { number: 1, name: 'January' },\n    { number: 2, name: 'February' },\n    { number: 3, name: 'March' },\n    { number: 4, name: 'April' },\n    { number: 5, name: 'May' },\n    { number: 6, name: 'June' },\n    { number: 7, name: 'July' },\n    { number: 8, name: 'August' },\n    { number: 9, name: 'September' },\n    { number: 10, name: 'October' },\n    { number: 11, name: 'November' },\n    { number: 12, name: 'December' }\n  ],\n  hours: [\n    { number: 0, name: '12 AM' },  \n    { number: 1, name: '1 AM' },\n    { number: 2, name: '2 AM' },\n    { number: 3, name: '3 AM' },\n    { number: 4, name: '4 AM' },\n    { number: 5, name: '5 AM' },\n    { number: 6, name: '6 AM' },\n    { number: 7, name: '7 AM' },\n    { number: 8, name: '8 AM' },\n    { number: 9, name: '9 AM' },\n    { number: 10, name: '10 AM' },\n    { number: 11, name: '11 AM' },\n    { number: 12, name: '12 PM' },\n    { number: 13, name: '1 PM' },\n    { number: 14, name: '2 PM' },\n    { number: 15, name: '3 PM' },\n    { number: 16, name: '4 PM' },\n    { number: 17, name: '5 PM' },\n    { number: 18, name: '6 PM' },\n    { number: 19, name: '7 PM' },\n    { number: 20, name: '8 PM' },\n    { number: 21, name: '9 PM' },\n    { number: 22, name: '10 PM' },\n    { number: 23, name: '11 PM' }\n  ]\n}","import React from 'react';\nimport { HourProps } from '../interfaces/index';\nimport { calendar } from '../utils/time'\nimport Checkbox from '@mui/material/Checkbox';\n\nexport const HourRow: React.FC<HourProps> = ({ hour, addToCalendar }) => {\n  let month = calendar.months.find(month => month.number === hour.month)?.name\n  let time = calendar.hours.find(thisHour => thisHour.number === hour.hour)?.name\n\n  if (hour.inCalendar) {\n    return (\n      <tr className=\"bg-gray-200 border-2 border-gray-900\">\n        <td><Checkbox onClick={() => addToCalendar(hour)} /></td>\n        <td>{month} {hour.day}</td>\n        <td>{time}</td>\n        <td>{hour.temperature}</td>\n        <td>{hour.windSpeed}</td>\n        <td>{hour.precipProb}</td>\n      </tr>\n    )\n  } else {\n    return (\n      <tr className=\"border-2 border-gray-900 transition duration-200 hover:bg-gray-200\">\n        <td><Checkbox onClick={() => addToCalendar(hour)} /></td>\n        <td>{month} {hour.day}</td>\n        <td>{time}</td>\n        <td>{hour.temperature}</td>\n        <td>{hour.windSpeed}</td>\n        <td>{hour.precipProb}</td>\n      </tr>\n    )\n  }\n}","import React from 'react';\nimport { PossibilitiesProps } from '../interfaces/index';\nimport { Link } from 'react-router-dom';\nimport { HourRow } from \"./HourRow\"\nimport Button from '@mui/material/Button';\nimport CalendarTodayIcon from '@mui/icons-material/CalendarToday';\n\nexport const Possibilities: React.FC<PossibilitiesProps> = ({ suitableHours, addToCalendar }) => {\n  let hourRows = suitableHours.map(suitableHour => (\n    <HourRow\n      key={`${suitableHour.month}${suitableHour.day}${suitableHour.hour}`}\n      hour={suitableHour}\n      addToCalendar={addToCalendar}\n    />\n  ))\n\n  return (\n    <section className='flex flex-col items-center my-4 md:my-8'>\n      <h2 className='text-xl md:text-2xl'>Suitable hours to be outside</h2>\n      <p className=\"mt-6 text-lg md:text-xl\">Click on an hour to add or delete it from your calendar</p>\n      <section className=\"mt-1 md:mt-2\">\n        <Link to='/calendar'>\n          <Button variant=\"outlined\" size=\"large\" startIcon={<CalendarTodayIcon />} endIcon={<CalendarTodayIcon />}>your calendar</Button>\n        </Link>\n      </section>\n      <table className=\"table-fixed mt-4 md:mt-8 text-center\">\n        <thead>\n          <tr className=\"bg-gray-900 text-gray-50 border-2 border-gray-900 divide-x-2 divide-white\">\n            <th className=\"w-1/12 p-2\">In Cal</th>\n            <th className=\"w-2/12\">Date</th>\n            <th className=\"w-1/12\">Hour</th>\n            <th className=\"w-1/12\">Temp</th>\n            <th className=\"w-1/12\">Wind</th>\n            <th className=\"w-1/12\">Precipt</th>\n          </tr>\n        </thead>\n        <tbody>\n          {hourRows}\n        </tbody>\n      </table>\n    </section>\n  )\n}","import React from 'react';\nimport { HourProps } from '../interfaces/index';\nimport { calendar } from '../utils/time'\nimport Checkbox from '@mui/material/Checkbox';\n\nexport const CalendarRow: React.FC<HourProps> = ({ hour, addToCalendar }) => {\n  let month = calendar.months.find(month => month.number === hour.month)?.name\n  let time = calendar.hours.find(thisHour => thisHour.number === hour.hour)?.name\n  \n  return (\n    <tr className=\"border-2 border-gray-900 transition duration-200 hover:bg-gray-200\">\n      <td><Checkbox defaultChecked onClick={() => addToCalendar(hour)} /></td>\n      <td>{month} {hour.day}</td>\n      <td>{time}</td>\n      <td>{hour.temperature}</td>\n      <td>{hour.windSpeed}</td>\n      <td>{hour.precipProb}</td>\n    </tr>\n  )\n}","import React from 'react';\nimport { CalendarProps } from '../interfaces/index';\nimport { CalendarRow } from \"./CalendarRow\"\nimport { Link } from 'react-router-dom';\nimport Button from '@mui/material/Button';\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\n\nexport const Calendar: React.FC<CalendarProps> = ({ calendar, addToCalendar }) => {\n  let hourRows = calendar.map(hour => (\n    <CalendarRow\n      key={`${hour.month}${hour.day}${hour.hour}`}\n      hour={hour}\n      addToCalendar={addToCalendar}\n    />\n  ))\n\n  if (calendar.length) {\n    return (\n      <section className='flex flex-col items-center my-4 md:my-8'>\n        <h2 className='text-xl md:text-2xl capitalize'>Your calendar</h2>\n        <p className=\"mt-6 text-lg md:text-xl\">Click on an hour to delete it from your calendar</p>\n        <table className=\"table-fixed mt-4 md:mt-8 text-center\">\n          <thead>\n            <tr className=\"bg-gray-900 text-gray-50 border-2 border-gray-900 divide-x-2 divide-white\">\n              <th className=\"w-1/12 p-2\">In Cal</th>\n              <th className=\"w-2/12\">Date</th>\n              <th className=\"w-1/12\">Hour</th>\n              <th className=\"w-1/12\">Temp</th>\n              <th className=\"w-1/12\">Wind</th>\n              <th className=\"w-1/12\">Precipt</th>\n            </tr>\n          </thead>\n          <tbody>\n            {hourRows}\n          </tbody>\n        </table>\n      </section>\n    )\n  } else {\n    return (\n      <section className='flex flex-col items-center my-4 md:my-8'>\n        <p className=\"text-xl md:text-2xl capitalize\">Your calendar is empty</p>\n        <section className=\"mt-1 md:mt-2\">\n          <Link to='/good_weather'>\n            <Button variant=\"outlined\" size=\"large\" startIcon={<ArrowBackIcon />}>go back</Button>\n          </Link>\n        </section>\n      </section>\n    )\n  }\n}","export const httpResponses = [\n  {\n    \"code\": 301,\n    \"message\": \"Moved Permanently\",\n    \"description\": `The URL of the requested resource has been changed\n      permanently. The new URL is given in the response.`,\n  },\n  {\n    \"code\": 401,\n    \"message\": \"Unauthorized\",\n    \"description\": `Although the HTTP standard specifies \"unauthorized\",\n      semantically this response means \"unauthenticated\". That is, the client\n      must authenticate itself to get the requested response.`,\n  },\n  {\n    \"code\": 403,\n    \"message\": \"Forbidden\",\n    \"description\": `The client does not have access rights to the content;\n      that is, it is unauthorized, so the server is refusing to give the\n      requested resource. Unlike 401, the client's identity is known to the\n      server.`,\n  },\n  {\n    \"code\": 404,\n    \"message\": \"Not Found\",\n    \"description\": `The server can not find the requested resource. In the\n      browser, this means the URL is not recognized. In an API, this can also\n      mean that the endpoint is valid but the resource itself does not exist.\n      Servers may also send this response instead of 403 to hide the existence\n      of a resource from an unauthorized client. This response code is probably \n      the most famous one due to its frequent occurrence on the web.`,\n  },\n  {\n    \"code\": 408,\n    \"message\": \"Request Timeout\",\n    \"description\": `This response is sent on an idle connection by some \n      servers, even without any previous request by the client. It means that \n      the server would like to shut down this unused connection. This response \n      is used much more since some browsers, like Chrome, Firefox 27+, or IE9, \n      use HTTP pre-connection mechanisms to speed up surfing. Also note that \n      some servers merely shut down the connection without sending this \n      message.`,\n  },\n  {\n    \"code\": 429,\n    \"message\": \"Too Many Requests\",\n    \"description\": `The user has sent too many requests in a given amount of \n      time (\"rate limiting\").`,\n  },\n  {\n    \"code\": 500,\n    \"message\": \"Internal Server Error\",\n    \"description\": `The server has encountered a situation it doesn't know how \n      to handle.`,\n  },\n  {\n    \"code\": 502,\n    \"message\": \"Bad Gateway\",\n    \"description\": `This error response means that the server, while working as \n      a gateway to get a response needed to handle the request, got an invalid \n      response.`,\n  },\n  {\n    \"code\": 503,\n    \"message\": \"Service Unavailable\",\n    \"description\": `The server is not ready to handle the request. Common \n      causes are a server that is down for maintenance or that is overloaded. \n      Note that together with this response, a user-friendly page explaining \n      the problem should be sent. This response should be used for temporary \n      conditions and the Retry-After: HTTP header should, if possible, contain \n      the estimated time before the recovery of the service. The webmaster must \n      also take care about the caching-related headers that are sent along with \n      this response, as these temporary condition responses should usually not \n      be cached.`,\n  },\n  {\n    \"code\": 504,\n    \"message\": \"Gateway Timeout\",\n    \"description\": `This error response is given when the server is acting as a \n      gateway and cannot get a response in time.`,\n  }\n]","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { ErrorProps } from '../interfaces/index';\nimport { httpResponses } from '../utils/httpResponses'\nimport Button from '@mui/material/Button';\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\n\nexport const Error: React.FC<ErrorProps> = ({ errorCode, clearSelected }) => {\n  let matchingResponse = httpResponses.find(response =>\n    response.code === Number(errorCode)\n  )\n\n  if (matchingResponse) {\n    return (\n      <article className='flex flex-col items-center mt-4 md:my-8'>\n        <section className='flex flex-col w-11/12 md:w-9/12 lg:w-6/12'>\n          <h2 className='text-xl md:text-2xl'>Error {matchingResponse.code}</h2>\n          <h3 className='text-xl font-medium'>{matchingResponse.message}</h3>\n          <p className=\"mt-6 text-xl\">{matchingResponse.description}</p>\n          <section className=\"flex flex-col items-center mt-8\">\n            <Link to='/'>\n              <Button variant=\"outlined\" size=\"large\" startIcon={<ArrowBackIcon />} onClick={clearSelected}>back</Button>\n            </Link>\n          </section>\n        </section>\n      </article>\n    )\n  } else {\n    return (\n      <>\n        <p>No matching error</p>\n      </>\n    )\n  }\n}","export const fetchData = async (url: string) => {\n  let projectURL = `https://github.com/alexmkio/can-i`\n  let email = `alexandermartelkio@gmail.com`\n  const headers = {\n    'User-Agent': `(${projectURL}, ${email})`\n  }\n  const opts = {\n    method: 'GET',\n    headers\n  }\n\n  let response = await fetch(url, opts);\n  return checkForError(response);\n}\n\nconst checkForError = async (response: Response) => {\n  if (!response.ok) {\n    throw new Error(response.status.toString());\n  } else {\n    let data = await response.json()\n    return data\n  }\n}","import { Weather, ThresholdValues } from \"../interfaces/weather\"\nimport { CleanedHour, PreciptHour, TempHour, WindHour } from '../interfaces/index';\n\nexport const cleanData = (forecast: Weather) => {\n  let tempObjects = getTemperature(forecast.properties.temperature.values)\n  let windObjects = getWindSpeed(forecast.properties.windSpeed.values)\n  let preciptObjects = getProbabilityOfPrecipitation(forecast.properties.windSpeed.values)\n\n  return tempObjects.reduce((newArray: CleanedHour[], currentTempObj) => {\n    let matchingWindObj = windObjects.find((currentWindObj) =>\n      currentWindObj.month === currentTempObj.month && \n      currentWindObj.day === currentTempObj.day && \n      currentWindObj.hour === currentTempObj.hour)\n\n    let matchingPreciptObj = preciptObjects.find((currentPreciptObj) =>\n      currentPreciptObj.month === currentTempObj.month && \n      currentPreciptObj.day === currentTempObj.day && \n      currentPreciptObj.hour === currentTempObj.hour)\n\n    if (matchingWindObj && matchingPreciptObj) {\n      let cleanedHour: CleanedHour = {\n        month: currentTempObj.month,\n        day: currentTempObj.day,\n        hour: currentTempObj.hour,\n        inCalendar: false,\n        temperature: currentTempObj.temperature,\n        windSpeed: matchingWindObj!.windSpeed,\n        precipProb: matchingPreciptObj!.precipProb\n      }\n      newArray.push(cleanedHour)\n    }\n\n    return newArray\n  }, [])\n};\n\nconst getTemperature = (tempValues: ThresholdValues[]) => {\n  return tempValues.reduce((newArray: TempHour[], currentValueObject) => {\n    let fullArray = currentValueObject.validTime.split('T')\n    let dateArray = fullArray[0].split('-')\n    let month = Number(dateArray[1])\n    let day = Number(dateArray[2])\n    let hour = Number(fullArray[1].split(':')[0])\n    let hoursThisLasts = Number(fullArray.join().split('H').join().split(',')[2])\n\n    for (let i = 0; i < hoursThisLasts; i++) {\n      let thisMonth = month\n      let thisDay = day\n      let thisHour = hour + i\n      if (thisHour > 23) {\n        thisDay++\n        thisHour = thisHour - 24\n      }\n      let weatherObj = { \n        month: thisMonth, \n        day: thisDay, \n        hour: thisHour,\n        temperature: ((currentValueObject.value! * (9 / 5)) + 32)\n      }\n      newArray.push(weatherObj)\n    }\n    return newArray\n  }, [])\n}\n\nconst getWindSpeed = (windValues: ThresholdValues[]) => {\n  return windValues.reduce((newArray: WindHour[], currentValueObject) => {\n    let fullArray = currentValueObject.validTime.split('T')\n    let dateArray = fullArray[0].split('-')\n    let month = Number(dateArray[1])\n    let day = Number(dateArray[2])\n    let hour = Number(fullArray[1].split(':')[0])\n    let hoursThisLasts = Number(fullArray.join().split('H').join().split(',')[2])\n\n    for (let i = 0; i < hoursThisLasts; i++) {\n      let thisMonth = month\n      let thisDay = day\n      let thisHour = hour + i\n      if (thisHour > 23) {\n        thisDay++\n        thisHour = thisHour - 24\n      }\n      let weatherObj = { \n        month: thisMonth, \n        day: thisDay, \n        hour: thisHour,\n        windSpeed: Math.round(currentValueObject.value! / 1.609344)\n      }\n      newArray.push(weatherObj)\n    }\n    return newArray\n  }, [])\n}\n\nconst getProbabilityOfPrecipitation = (precipValues: ThresholdValues[]) => {\n  return precipValues.reduce((newArray: PreciptHour[], currentValueObject) => {\n    let fullArray = currentValueObject.validTime.split('T')\n    let dateArray = fullArray[0].split('-')\n    let month = Number(dateArray[1])\n    let day = Number(dateArray[2])\n    let hour = Number(fullArray[1].split(':')[0])\n    let hoursThisLasts = Number(fullArray.join().split('H').join().split(',')[2])\n\n    for (let i = 0; i < hoursThisLasts; i++) {\n      let thisMonth = month\n      let thisDay = day\n      let thisHour = hour + i\n      if (thisHour > 23) {\n        thisDay++\n        thisHour = thisHour - 24\n      }\n      let weatherObj = { \n        month: thisMonth, \n        day: thisDay, \n        hour: thisHour,\n        precipProb: currentValueObject.value \n      }\n      newArray.push(weatherObj)\n    }\n    return newArray\n  }, [])\n}","import { Thresholds, CleanedHour } from \"../interfaces/index\";\n\nexport const determineSuitableHours = (thresholds: Thresholds, cleanedData: CleanedHour[], timezone: string) => {\n  let currentDateInHours = findUsersDateInHours(timezone)\n  return cleanedData.filter(currentHourObj => {\n    let weatherDateInHours = ((currentHourObj.day * 24) + currentHourObj.hour)\n    if (weatherDateInHours >= currentDateInHours && \n      currentHourObj.temperature <= thresholds.temperature.high && \n      currentHourObj.temperature >= thresholds.temperature.low && \n      currentHourObj.windSpeed <= thresholds.windSpeed && \n      currentHourObj.precipProb <= thresholds.probOfPrecip\n    ) {\n      return currentHourObj\n    } else {\n      return false\n    }\n  })\n};\n\nexport const craftNotice = (suitableHours: CleanedHour[], timezone: string) => {\n  let currentDateInHours = findUsersDateInHours(timezone)\n  let incremented = 0\n  let nextOpportunity = 0\n  let incrementingCurrentHours = currentDateInHours\n\n  suitableHours.every(hourObject => {\n    let weatherDateInHours = ((hourObject.day * 24) + hourObject.hour)\n    if (incrementingCurrentHours === weatherDateInHours) {\n      incremented++\n      incrementingCurrentHours++\n      return true\n    } else {\n      nextOpportunity = weatherDateInHours - currentDateInHours\n      return false\n    }\n  })\n\n  if (incremented) {\n    return { nice: true, hours: incremented }\n  } else {\n    return { nice: false, hours: nextOpportunity }\n  }\n};\n\nconst findUsersDateInHours = (timezone: string) => {\n  let splitDate = new Date().toLocaleString(\"en-US\", {timeZone: timezone})\n    .split('/').join(':').split(':').join(', ').split(', ').join(' ').split(' ')\n  let hour = Number(splitDate[3])\n  if (splitDate[6] === 'PM') {\n    hour = hour + 12\n  }\n  return ((Number(splitDate[1]) * 24) + hour)\n}","import { useState, useEffect } from 'react';\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport { Header } from './Header';\nimport { Search } from './Search';\nimport { Results } from './Results'\nimport { Possibilities } from './Possibilities'\nimport { Calendar } from './Calendar'\nimport { Error } from './Error'\nimport { fetchData } from '../utils/fetchCalls';\nimport { cleanData } from '../utils/cleanData';\nimport { determineSuitableHours, craftNotice } from '../utils/utils'\nimport { IpFetch, CleanedHour, Notice, Thresholds } from '../interfaces/index';\n\nexport const App = () => {\n  const [coordinates, setCoordinates] = useState<IpFetch | undefined>(undefined);\n  const [forecast, setForecast] = useState<CleanedHour[]>([]);\n  const [errorCode, setErrorCode] = useState<number>(0);\n  const [suitableHours, setSuitableHours] = useState<CleanedHour[]>([]);\n  const [notice, setNotice] = useState<Notice>({ nice: false, hours: 0 });\n  const [schedule, setSchedule] = useState<CleanedHour[]>([]);\n\n  const fetchAndCleanData = async () => {\n    let ipKey = `103a0ac5b110412c9a639e3ab5afd99f`\n    let ipParams = `&fields=latitude,longitude,time_zone`\n    let weatherURL = `https://api.weather.gov/points/`\n    try {\n      let coordinates = await fetchData(\n        `https://api.ipgeolocation.io/ipgeo?apiKey=${ipKey}${ipParams}`\n      )\n      let gridPoints = await fetchData(\n        `${weatherURL}${coordinates.latitude},${coordinates.longitude}`\n      )\n      let forecast = await fetchData(gridPoints.properties.forecastGridData)\n      let cleanedData = cleanData(forecast)\n      setCoordinates(coordinates)\n      setForecast(cleanedData)\n    } catch (error) {\n      setErrorCode(Number(error.message))\n    }\n  }\n\n  useEffect(() => {\n    fetchAndCleanData()\n  }, [])\n\n  const getForecast = async (thresholds: Thresholds) => {\n    if (coordinates) {\n      let suitableHours = await determineSuitableHours(\n        thresholds,\n        forecast,\n        coordinates.time_zone.name\n      )\n      let notice = craftNotice(suitableHours, coordinates.time_zone.name)\n      setNotice(notice)\n      setSuitableHours(suitableHours)\n    }\n  }\n\n  const clearSelected = () => {\n    setErrorCode(0)\n  }\n\n  const addToCalendar = (hourObject: CleanedHour) => {\n    let suitable = suitableHours\n    let thatOne = suitable.indexOf(hourObject)\n    if (schedule.includes(hourObject)) {\n      let currentSchedule = schedule\n      let ind = currentSchedule.indexOf(hourObject)\n      currentSchedule.splice(ind, 1)\n      suitable[thatOne].inCalendar = false\n      setSchedule([...currentSchedule])\n    } else {\n      suitable[thatOne].inCalendar = true\n      setSchedule([...schedule, hourObject])\n    }\n    setSuitableHours([...suitable])\n  }\n\n  return (\n    <>\n      <Header />\n      <main>\n        {!errorCode && (\n          <Switch>\n            <Route exact path='/' render={() =>\n              <Search getForecast={getForecast} /> \n            }/>\n\n            <Route exact path='/results' render={() =>\n              <Results notice={notice} />\n            }/>\n\n            <Route exact path='/good_weather' render={() =>\n              <Possibilities\n                suitableHours={suitableHours}\n                addToCalendar={addToCalendar}\n              />\n            }/>\n\n            <Route exact path='/calendar' render={() =>\n              <Calendar\n                calendar={schedule}\n                addToCalendar={addToCalendar}\n              />\n            }/>\n\n            <Route exact path='/404' render={() =>\n              <Error errorCode={404} clearSelected={clearSelected} />\n            }/>\n            \n            <Redirect to='/404' />\n          </Switch>\n        )}\n        {errorCode !== 0 &&\n          <Error errorCode={errorCode} clearSelected={clearSelected} />\n        }\n      </main>\n    </>\n  )\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport './index.css';\nimport { App } from './components/App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\n\nconst router = <HashRouter> <App /> </HashRouter>;\n\nReactDOM.render(router, document.getElementById('root'));\n\nserviceWorkerRegistration.register();"],"sourceRoot":""}